package com.proyecto.citas.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.proyecto.citas.model.DiaLibre;
import com.proyecto.citas.model.DiaLibreModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DiaLibre service. Represents a row in the &quot;RES_DIA_LIBRE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.proyecto.citas.model.DiaLibreModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DiaLibreImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DiaLibreImpl
 * @see com.proyecto.citas.model.DiaLibre
 * @see com.proyecto.citas.model.DiaLibreModel
 * @generated
 */
public class DiaLibreModelImpl extends BaseModelImpl<DiaLibre>
    implements DiaLibreModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a dia libre model instance should use the {@link com.proyecto.citas.model.DiaLibre} interface instead.
     */
    public static final String TABLE_NAME = "RES_DIA_LIBRE";
    public static final Object[][] TABLE_COLUMNS = {
            { "ID_LIBRE", Types.INTEGER },
            { "T_DIA", Types.VARCHAR },
            { "B_LIBRE", Types.INTEGER },
            { "T_CODIGO_DIA", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table RES_DIA_LIBRE (ID_LIBRE INTEGER not null primary key,T_DIA VARCHAR(75) null,B_LIBRE INTEGER,T_CODIGO_DIA VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table RES_DIA_LIBRE";
    public static final String ORDER_BY_JPQL = " ORDER BY diaLibre.idLibre ASC";
    public static final String ORDER_BY_SQL = " ORDER BY RES_DIA_LIBRE.ID_LIBRE ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.proyecto.citas.model.DiaLibre"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.proyecto.citas.model.DiaLibre"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.proyecto.citas.model.DiaLibre"));
    private static ClassLoader _classLoader = DiaLibre.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            DiaLibre.class
        };
    private int _idLibre;
    private String _dia;
    private int _libre;
    private String _codigoDia;
    private DiaLibre _escapedModel;

    public DiaLibreModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _idLibre;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setIdLibre(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _idLibre;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return DiaLibre.class;
    }

    @Override
    public String getModelClassName() {
        return DiaLibre.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("idLibre", getIdLibre());
        attributes.put("dia", getDia());
        attributes.put("libre", getLibre());
        attributes.put("codigoDia", getCodigoDia());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer idLibre = (Integer) attributes.get("idLibre");

        if (idLibre != null) {
            setIdLibre(idLibre);
        }

        String dia = (String) attributes.get("dia");

        if (dia != null) {
            setDia(dia);
        }

        Integer libre = (Integer) attributes.get("libre");

        if (libre != null) {
            setLibre(libre);
        }

        String codigoDia = (String) attributes.get("codigoDia");

        if (codigoDia != null) {
            setCodigoDia(codigoDia);
        }
    }

    @Override
    public int getIdLibre() {
        return _idLibre;
    }

    @Override
    public void setIdLibre(int idLibre) {
        _idLibre = idLibre;
    }

    @Override
    public String getDia() {
        if (_dia == null) {
            return StringPool.BLANK;
        } else {
            return _dia;
        }
    }

    @Override
    public void setDia(String dia) {
        _dia = dia;
    }

    @Override
    public int getLibre() {
        return _libre;
    }

    @Override
    public void setLibre(int libre) {
        _libre = libre;
    }

    @Override
    public String getCodigoDia() {
        if (_codigoDia == null) {
            return StringPool.BLANK;
        } else {
            return _codigoDia;
        }
    }

    @Override
    public void setCodigoDia(String codigoDia) {
        _codigoDia = codigoDia;
    }

    @Override
    public DiaLibre toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (DiaLibre) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        DiaLibreImpl diaLibreImpl = new DiaLibreImpl();

        diaLibreImpl.setIdLibre(getIdLibre());
        diaLibreImpl.setDia(getDia());
        diaLibreImpl.setLibre(getLibre());
        diaLibreImpl.setCodigoDia(getCodigoDia());

        diaLibreImpl.resetOriginalValues();

        return diaLibreImpl;
    }

    @Override
    public int compareTo(DiaLibre diaLibre) {
        int primaryKey = diaLibre.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof DiaLibre)) {
            return false;
        }

        DiaLibre diaLibre = (DiaLibre) obj;

        int primaryKey = diaLibre.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<DiaLibre> toCacheModel() {
        DiaLibreCacheModel diaLibreCacheModel = new DiaLibreCacheModel();

        diaLibreCacheModel.idLibre = getIdLibre();

        diaLibreCacheModel.dia = getDia();

        String dia = diaLibreCacheModel.dia;

        if ((dia != null) && (dia.length() == 0)) {
            diaLibreCacheModel.dia = null;
        }

        diaLibreCacheModel.libre = getLibre();

        diaLibreCacheModel.codigoDia = getCodigoDia();

        String codigoDia = diaLibreCacheModel.codigoDia;

        if ((codigoDia != null) && (codigoDia.length() == 0)) {
            diaLibreCacheModel.codigoDia = null;
        }

        return diaLibreCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(9);

        sb.append("{idLibre=");
        sb.append(getIdLibre());
        sb.append(", dia=");
        sb.append(getDia());
        sb.append(", libre=");
        sb.append(getLibre());
        sb.append(", codigoDia=");
        sb.append(getCodigoDia());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(16);

        sb.append("<model><model-name>");
        sb.append("com.proyecto.citas.model.DiaLibre");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>idLibre</column-name><column-value><![CDATA[");
        sb.append(getIdLibre());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>dia</column-name><column-value><![CDATA[");
        sb.append(getDia());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>libre</column-name><column-value><![CDATA[");
        sb.append(getLibre());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>codigoDia</column-name><column-value><![CDATA[");
        sb.append(getCodigoDia());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
